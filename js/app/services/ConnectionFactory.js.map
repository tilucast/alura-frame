{"version":3,"sources":["../../app-es6+/services/ConnectionFactory.js"],"names":["Negociacao","store","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","e","_createStores","target","result","onsuccess","bind","onerror","error","name","forEach","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","autoIncrement"],"mappings":";;;;;;;;;;;;;;;AAAOA,MAAAA,U;;;AAEDC,MAAAA,K,GAAQ,CAAC,aAAD,C;AACRC,MAAAA,O,GAAU,E;AACVC,MAAAA,M,GAAS,Y;AACXC,MAAAA,U,GAAa,I;AACbC,MAAAA,K,GAAQ,I;;yBAGSC,iB;AAEjB,qCAAa;AAAA;;AACT,gBAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACH;;;;0CAEqB;AAClB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnC,oBAAMC,WAAW,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAApB;;AAEAS,cAAAA,WAAW,CAACI,eAAZ,GAA8B,UAAAC,CAAC,EAAG;AAE9BV,gBAAAA,iBAAiB,CAACW,aAAlB,CAAgCD,CAAC,CAACE,MAAF,CAASC,MAAzC;AAEH,eAJD;;AAMAR,cAAAA,WAAW,CAACS,SAAZ,GAAwB,UAAAJ,CAAC,EAAG;AACxB,oBAAG,CAACZ,UAAJ,EAAgB;AACZA,kBAAAA,UAAU,GAAGY,CAAC,CAACE,MAAF,CAASC,MAAtB;AACAd,kBAAAA,KAAK,GAAGD,UAAU,CAACC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;;AACAA,kBAAAA,UAAU,CAACC,KAAX,GAAmB,YAAU;AACzB,0BAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACH,mBAFD;AAGH;;AACDE,gBAAAA,OAAO,CAACL,UAAD,CAAP;AACH,eATD;;AAWAO,cAAAA,WAAW,CAACW,OAAZ,GAAsB,UAAAN,CAAC,EAAG;AACtBN,gBAAAA,MAAM,CAACM,CAAC,CAACE,MAAF,CAASK,KAAT,CAAeC,IAAhB,CAAN;AACH,eAFD;AAGH,aAvBM,CAAP;AAwBH;;;wCAEoBpB,U,EAAW;AAC5BH,YAAAA,KAAK,CAACwB,OAAN,CAAc,UAAAxB,KAAK,EAAI;AACnB,kBAAGG,UAAU,CAACsB,gBAAX,CAA4BC,QAA5B,CAAqC1B,KAArC,CAAH,EACIG,UAAU,CAACwB,iBAAX,CAA6B3B,KAA7B;AAEJG,cAAAA,UAAU,CAACyB,iBAAX,CAA6B5B,KAA7B,EAAoC;AAAE6B,gBAAAA,OAAO,EAAE,IAAX;AAAiBC,gBAAAA,aAAa,EAAE;AAAhC,eAApC;AACH,aALD;AAMH;;;0CAEsB3B,U,EAAW;AAC9B,gBAAGA,UAAH,EAAc;AACVC,cAAAA,KAAK;AACLD,cAAAA,UAAU,GAAG,IAAb;AACH;AACJ","sourcesContent":["import Negociacao from '../models/Negociacao.js'\n\nconst store = ['negociacoes']\nconst version = 15\nconst dbName = 'aluraframe'\nlet connection = null\nlet close = null\n\n\nexport default class ConnectionFactory{\n    \n    constructor(){\n        throw new Error('Classe estática.')\n    }\n\n    static getConnection(){\n        return new Promise((resolve, reject) =>{\n            const openRequest = window.indexedDB.open(dbName, version)\n\n            openRequest.onupgradeneeded = e =>{\n\n                ConnectionFactory._createStores(e.target.result)\n\n            }\n\n            openRequest.onsuccess = e =>{\n                if(!connection) {\n                    connection = e.target.result\n                    close = connection.close.bind(connection)\n                    connection.close = function(){\n                        throw new Error('Não pode fechar a conexão diretamente.')\n                    }\n                }\n                resolve(connection)\n            }\n\n            openRequest.onerror = e =>{\n                reject(e.target.error.name)\n            }\n        })\n    }\n\n    static _createStores(connection){\n        store.forEach(store => {\n            if(connection.objectStoreNames.contains(store)) \n                connection.deleteObjectStore(store)\n\n            connection.createObjectStore(store, { keyPath: \"id\", autoIncrement: true })\n        })\n    }\n\n    static closeConnection(connection){\n        if(connection){\n            close()\n            connection = null\n        }\n    }\n}"],"file":"ConnectionFactory.js"}