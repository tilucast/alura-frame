{"version":3,"sources":["../../app-es6+/helpers/DateHelper.js"],"names":["DateHelper","Error","text","test","Date","split","map","item","index","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;yBAAqBA,U;AACnB,8BAAc;AAAA;;AACZ,gBAAM,IAAIC,KAAJ,CACJ,2DADI,CAAN;AAGD;;;;qCAEiBC,I,EAAM;AACtB,gBAAI,CAAC,sBAAsBC,IAAtB,CAA2BD,IAA3B,CAAL,EACE,MAAM,IAAID,KAAJ,CAAU,kCAAV,CAAN;AAEF,mBAAO,IAAIG,IAAJ,CACL,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP;AAAA,qBAAiBD,IAAI,GAAIC,KAAK,GAAG,CAAjC;AAAA,aAApB,CADE,CAAP;AAGD;;;qCAEiBC,I,EAAM;AACtB,6BAAUA,IAAI,CAACC,OAAL,EAAV,cAA4BD,IAAI,CAACE,QAAL,KAAkB,CAA9C,cAAmDF,IAAI,CAACG,WAAL,EAAnD;AACD","sourcesContent":["export default class DateHelper {\n  constructor() {\n    throw new Error(\n      'DateHelper é estático, portanto não pode ser instanciado.'\n    );\n  }\n\n  static textToDate(text) {\n    if (!/^\\d{4}-\\d{2}-\\d{2}$/.test(text))\n      throw new Error('Deve estar no formato aaaa-mm-dd');\n\n    return new Date(\n      ...text.split('-').map((item, index) => item - (index % 2))\n    );\n  }\n\n  static dateToText(data) {\n    return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\n  }\n}\n"],"file":"DateHelper.js"}